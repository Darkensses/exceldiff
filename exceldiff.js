var y=Object.create;var w=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var _=Object.getOwnPropertyNames;var q=Object.getPrototypeOf,S=Object.prototype.hasOwnProperty;var F=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);var T=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let a of _(t))!S.call(e,a)&&a!==r&&w(e,a,{get:()=>t[a],enumerable:!(o=k(t,a))||o.enumerable});return e};var C=(e,t,r)=>(r=e!=null?y(q(e)):{},T(t||!e||!e.__esModule?w(r,"default",{value:e,enumerable:!0}):r,e));var b=F((I,m)=>{var p=require("node:fs"),u=require("node:path"),f=require("exceljs"),s=require("daff");async function R(e){let{fileTypeFromFile:t}=await import("file-type");if(p.existsSync(e)){let r=await t(e);if(r&&r.ext==="xlsx"){let o=await V(e);return await d(o)}else if(u.extname(e).toLowerCase()===".csv"){let o=await E(e);return await d(o)}else throw Error("Unsupported file format: Only .CSV or .XSLX are supported.")}else throw Error("The expected file does not exists or the path is not valid.")}async function V(e,t=1){let r=new f.Workbook;return await r.xlsx.readFile(e),r.getWorksheet(t)}async function E(e){return await new f.Workbook().csv.readFile(e)}async function d(e){let t=[];for(let r=1;r<=e.actualRowCount;r++)t.push(e.getRow(r).values.slice(1));return t}function W(e,t){let r=new s.TableView(e),o=new s.TableView(t);r.trim(),o.trim();var a=s.compareTables(r,o);let c=a.align(),l=new s.TableView([]),i=new s.CompareFlags;i.always_show_header=!0,i.always_show_order=!0,i.never_show_order=!1,i.show_unchanged=!0,i.unchanged_context=!0,i.show_unchanged_columns=!0;var g=new s.TableDiff(c,i);g.hilite(l);var h=new s.DiffRender;h.render(l);var x=h.html();return{is_equal:a.comp.is_equal,html:x}}function $(e,t,r){let a=p.readFileSync("assets/base.html","utf8").replace("<title></title>",`<title>${t.title}</title>`).replace('<p id="expected"></p>',`<p id="expected">${t.expected}</p>`).replace('<p id="actual"></p>',`<p id="actual">${t.actual}</p>`).replace('<div id="table-container"></div>',`<div id="table-container">
${e}
</div>`),c=u.isAbsolute(r)?r:u.join(__dirname,r),l=u.dirname(c);try{p.mkdirSync(l,{recursive:!0}),p.writeFileSync(c,a,"utf8"),console.log("File written successfully",c)}catch(i){console.error("Error when save:",i)}}m.exports={parseInput:R,toCSV:d,diff:W,createReport:$}});var D=require("yargs/yargs"),{hideBin:L}=require("yargs/helpers"),{parseInput:v,diff:O,createReport:P}=b(),n=D(L(process.argv)).usage("Usage: $0 --original [path] --compare [path] --report [path]").option("expected",{alias:"e",describe:"Path to the original file",type:"string",demandOption:!0}).option("actual",{alias:"a",describe:"Path to the file to compare",type:"string",demandOption:!0}).option("report",{alias:"r",describe:"Path to the report file",type:"string",demandOption:!1}).help().argv;(async()=>{let e=await v(n.expected),t=await v(n.actual),r=O(e,t);if(console.log(r.is_equal),n.report){let o={title:"Excel Diffing",expected:n.expected,actual:n.actual};P(r.html,o,n.report)}})();
